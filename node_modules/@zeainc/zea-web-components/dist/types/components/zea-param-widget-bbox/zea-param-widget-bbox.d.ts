export declare class ZeaParamWidgetBBox {
  /**
   * Parameter being parsed
   */
  parameter: any;
  /**
   * Object that hosts undoRedo instance, parameter class and parameter change class.
   * These last two so we can reconstruct the component dynamically.
   */
  appData: object;
  /**
   * The `ParameterValueChange` obj.
   */
  private minXField;
  private minYField;
  private minZField;
  private maxXField;
  private maxYField;
  private maxZField;
  private parameterChange;
  constructor();
  /**
   * Called once just after the component fully loaded and the first render() occurs
   */
  componentDidLoad(): void;
  /**
   * Configures the component to react to `valueChanged` events in the parameter.
   */
  handleComponentUpdate(): void;
  /**
   * Updates component field values with parameter's.
   */
  updateComponent(): void;
  /**
   * Handles updates of the input fields
   */
  onInput(): void;
  /**
   * Handles the lost of focus of the input field.
   * Used to commit the `ParameterValueChange` object to the `UndoRedoManager`
   */
  onBlur(): void;
  /**
   * Handles the creation of the UX Change object and the UndoRedoManager
   *
   * @param {Parameter} value - Parameter object
   */
  handleUXChange(value: any): void;
  /**
   * Render method
   *
   * @return {JSX} The generated html
   */
  render(): any;
}
