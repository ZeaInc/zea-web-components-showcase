'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-f5b25f1f.js');

const zeaInputColorCss = ".color-input{display:flex;overflow:hidden}.color-input .input-label{display:block}.color-thumb{flex-shrink:0;display:block;width:54px;height:54px;border-radius:30px;margin-right:10px;display:flex;align-items:center;justify-content:center;font-size:12px}.color-copy{font-size:12px;color:var(--color-foreground-2)}.color-popup{padding:7px;position:absolute;grid-template-columns:1fr 1fr 1fr 1fr;margin-top:-70px;margin-left:43px;border-radius:10px;background-color:var(--color-background-2);display:none;z-index:1000}.color-popup.top-left{margin-top:110px;margin-left:-54px}.color-popup.shown{display:grid}.color-option{padding:8px}.color-option:hover{padding:0px}.color-option.active:hover,.color-option.active{padding:0}.color-option:hover .color-sample{border:8px solid var(--color-background-1);border-radius:20px}.color-option.active:hover .color-sample,.color-option.active .color-sample{width:32px;height:32px;border-radius:20px;border:none}.color-sample{width:16px;height:16px;border-radius:10px}.choosen-color{width:32px;height:32px;border-radius:20px}";

const ZeaInputColor = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /**
     */
    this.showLabel = false;
    /**
     */
    this.invalidMessage = 'Not valid';
    /**
     */
    this.invalidMessageShown = false;
    /**
     */
    this.required = false;
    /**
     */
    this.isValid = true;
    /**
     */
    this.colorPopupShown = false;
    /**
     */
    this.colorPopupAlign = 'bottom-right';
    /**
     */
    this.label = 'Color';
    /**
     */
    this.name = 'zea-input';
    /**
     */
    this.colorOptions = [
      '#F34235',
      '#E81D62',
      '#000000',
      '#9B26AF',
      '#6639B6',
      '#3E50B4',
      '#2095F2',
      '#02A8F3',
      '#00BBD3',
      '#009587',
      '#4BAE4F',
      '#8AC249',
      '#CCDB38',
      '#FEEA3A',
      '#FEC006',
      '#FE9700',
      '#FE5621',
      '#785447',
      '#9D9D9D',
      '#5F7C8A',
    ];
  }
  /**
   * Listen to click events on the whole document
   * @param {any} e The event
   */
  handleClick(e) {
    if (!e.composedPath().includes(this.colorPopup) &&
      !e.composedPath().includes(this.selectedColorContainer)) {
      this.colorPopupShown = false;
    }
  }
  /**
   */
  onColorClick(e) {
    this.selectColor(e.currentTarget.dataset.color);
  }
  /**
   */
  selectColor(color) {
    const colorElement = this.inputWrapElement.querySelector(`.color-option[data-color="${color}"]`);
    if (!colorElement)
      return;
    this.selectedColor = colorElement.dataset.color;
    if (this.currentColorElement)
      this.currentColorElement.classList.remove('active');
    colorElement.classList.add('active');
    this.currentColorElement = colorElement;
    this.value = this.selectedColor;
  }
  /**
   */
  componentWillLoad() {
    if (!this.selectedColor && !this.value) {
      this.selectedColor = this.colorOptions[Math.floor(Math.random() * this.colorOptions.length)];
      this.value = this.selectedColor;
    }
    else if (this.value) {
      this.selectedColor = this.value;
    }
  }
  /**
   */
  componentDidLoad() {
    if (this.value) {
      const colorElement = this.inputWrapElement.querySelector(`.color-option[data-color="${this.value}"]`);
      if (!colorElement)
        return;
      if (this.currentColorElement)
        this.currentColorElement.classList.remove('active');
      colorElement.classList.add('active');
      this.currentColorElement = colorElement;
    }
  }
  /**
   * Main render function
   * @return {JSX} The generated html
   */
  render() {
    return (index.h("div", { class: "input-wrap", ref: (el) => (this.inputWrapElement = el) }, index.h("div", { class: "color-input" }, index.h("div", { class: "color-thumb" }, index.h("div", { ref: (el) => (this.selectedColorContainer = el), class: "choosen-color", style: { backgroundColor: this.selectedColor }, onClick: () => {
        this.colorPopupShown = !this.colorPopupShown;
      } }), index.h("div", { ref: (el) => (this.colorPopup = el), class: `color-popup ${this.colorPopupShown ? 'shown' : ''} ${this.colorPopupAlign}` }, this.colorOptions.map((colorOption) => (index.h("div", { class: "color-option", "data-color": colorOption, onMouseDown: this.onColorClick.bind(this), onMouseUp: () => {
        this.colorPopupShown = false;
      } }, index.h("div", { class: "color-sample", style: { backgroundColor: colorOption } })))))), this.showLabel && (index.h("div", { class: "color-copy" }, index.h("label", { class: "input-label" }, this.label), "Your color helps you stand out from other people."))), !this.isValid && this.invalidMessageShown && (index.h("div", { class: "invalid-message" }, this.invalidMessage))));
  }
};
ZeaInputColor.style = zeaInputColorCss;

exports.zea_input_color = ZeaInputColor;
