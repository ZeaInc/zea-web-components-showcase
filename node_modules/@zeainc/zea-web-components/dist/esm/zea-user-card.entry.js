import { r as registerInstance, h } from './index-b00b7e23.js';

const zeaUserCardCss = ":host,input,button,select,textarea{font-family:'Roboto', sans-serif}.zea-user-card{color:var(--color-foreground-1);font-size:13px}.zea-user-card{min-width:290px;background-color:var(--color-background-2);display:grid;grid-template-columns:min-content auto min-content;align-items:flex-start;position:relative;z-index:10000000}.zea-user-card.small{min-width:280px}.user-chip-container,.user-focuser-container{display:flex;align-items:center;justify-content:center}.user-focuser-container zea-icon{}.user-focuser{padding:8px;cursor:pointer}.user-focuser:hover{color:white}.zea-user-card .user-info{padding-left:0}.user-name{padding-top:5px;padding-bottom:4px}.user-company{color:var(--color-foreground-3)}.zea-user-card>*{padding:10px}.additional-data{grid-column-start:1;grid-column-end:4;grid-gap:1em;padding:1em;border-top:1px solid var(--color-grey-3);display:none}.additional-data.shown{display:grid}.user-phone,.user-email{display:flex;align-items:center}.user-phone zea-icon,.user-email zea-icon{flex-grow:0;width:32px}.profile-link{font-size:13px;color:var(--color-secondary-1);margin-top:3px;cursor:pointer}.additional-data-collapser{display:flex;align-items:center;grid-column-start:span 3;padding-left:15px;padding-top:5px}.collapser-label{flex-grow:1}.small{font-size:12px}.small .additional-data{display:none !important}.small .user-company{display:none}.small .user-chip-container{padding:5px}.small .user-focuser-container{padding:0}:host-context(.overflow-entry.shown){box-sizing:border-box;border:1px solid var(--color-grey-3);margin-right:10px}.user-focuser-container{visibility:hidden}:host-context(.overflow-entry:hover) .user-focuser-container,:host-context(.overflow-entry.shown) .user-focuser-container{visibility:visible}:host-context(.overflow-entry:hover) .zea-user-card{background-color:var(--color-grey-2)}:host-context(.overflow-entry.shown:hover) .zea-user-card{background-color:transparent}zea-dialog-profile{z-index:100000000}@media only screen and (max-width: 667px){.zea-user-card{width:100%;position:fixed;left:0}}";

const ZeaUserCard = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * Whether the card is for the current user session
     */
    this.isCurrentUser = false;
    /**
     * Whether to show the collpase control for additional data
     */
    this.collapsible = true;
    /**
     * Density and size of elements
     */
    this.density = 'normal';
  }
  /**
   * Initialize the shown state of additional data
   * according to whether collapsing is allowed or not
   */
  componentWillLoad() {
    this.additionalDataShown = !this.collapsible;
  }
  /**
   * Show the profile editor form
   */
  onProfileLinkClick() {
    this.profileDialog.shown = true;
  }
  /**
   * Main render function
   * @return {JSX} The generated html
   */
  render() {
    const firstName = this.userData.firstName || this.userData.given_name;
    const lastName = this.userData.lastName || this.userData.family_name;
    const company = this.userData.company;
    const phone = this.userData.phone;
    const email = this.userData.email;
    return (h("div", { class: `zea-user-card ${this.density}` }, h("div", { class: "user-chip-container" }, h("zea-user-chip", { showProfileCard: false, showTooltip: false, userData: this.userData, density: this.density == 'normal' ? 'large' : this.density })), h("div", { class: "user-info" }, h("div", { class: "user-name" }, firstName, " ", lastName), h("div", { class: "user-company" }, company), this.isCurrentUser && (h("div", { onClick: this.onProfileLinkClick.bind(this), class: "profile-link" }, "My Profile"))), !this.isCurrentUser && (h("div", { class: "user-focuser-container" }, h("div", { class: "user-focuser", onClick: (e) => {
        e.preventDefault();
        e.stopPropagation();
      } }, h("zea-icon", { name: "find-user", type: "zea", size: 28 })))), !this.isCurrentUser && this.collapsible && (phone || email) && (h("div", { class: "additional-data-collapser", onClick: () => (this.additionalDataShown = !this.additionalDataShown) }, h("span", { class: "collapser-label" }, this.additionalDataShown ? 'Less' : 'More'), h("span", { class: "collapser-icon" }, h("zea-icon", { name: this.additionalDataShown
        ? 'chevron-up-outline'
        : 'chevron-down-outline', size: 14 })))), !this.isCurrentUser && (phone || email) && (h("div", { class: {
        'additional-data': true,
        shown: this.additionalDataShown,
      } }, phone && (h("div", { class: "user-phone" }, h("zea-icon", { name: "phone-portrait-outline" }), h("span", null, phone))), email && (h("div", { class: "user-email" }, h("zea-icon", { name: "mail-outline" }), h("span", null, email))))), this.isCurrentUser && (h("zea-dialog-profile", { ref: (el) => (this.profileDialog = el), userData: this.userData }))));
  }
};
ZeaUserCard.style = zeaUserCardCss;

export { ZeaUserCard as zea_user_card };
