import { r as registerInstance, h } from './index-b00b7e23.js';

const zeaFormCss = ":host,input,button,select,textarea{font-family:'Roboto', sans-serif}.zea-form{color:var(--color-foreground-1)}zea-button.submit{margin-top:2em;width:100%}";

const ZeaForm = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     */
    this.submitText = 'SUBMIT';
    /**
     */
    this.validate = true;
    /**
     */
    this.isValid = true;
    /**
     */
    this.formValue = {};
    /**
     */
    this.inputs = [];
  }
  /**
   */
  getFormValue() {
    this.checkValidation();
    this.inputs.forEach((inputElement) => {
      this.formValue[inputElement.name] = inputElement.value;
    });
    return this.formValue;
  }
  /**
   */
  checkValidation() {
    if (!this.validate) {
      return true;
    }
    for (let i = 0; i < this.inputs.length; i++) {
      const inputElement = this.inputs[i];
      if (inputElement.isValid) {
        inputElement.invalidMessageShown = false;
        this.isValid = true;
      }
      else {
        inputElement.invalidMessageShown = true;
        this.isValid = false;
        return false;
      }
    }
    return true;
  }
  /**
   */
  onSubmit() {
    if (this.submitCallback) {
      this.submitCallback(this.getFormValue());
    }
  }
  /**
   */
  componentDidRender() {
    this.setupChildren();
  }
  /**
   * Run some setup for the children items
   */
  setupChildren() {
    this.formContainer
      .querySelector('slot')
      .assignedElements()
      .forEach((element) => {
      if (element.tagName.match(/^ZEA-INPUT/i)) {
        this.inputs.push(element);
      }
    });
  }
  // eslint-disable-next-line require-jsdoc
  render() {
    return (h("div", { class: "zea-form", ref: (el) => (this.formContainer = el) }, h("slot", null), h("zea-button", { onClick: this.onSubmit.bind(this), class: "submit" }, this.submitText)));
  }
};
ZeaForm.style = zeaFormCss;

export { ZeaForm as zea_form };
