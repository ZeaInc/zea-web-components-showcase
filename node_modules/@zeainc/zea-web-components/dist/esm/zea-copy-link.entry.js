import { r as registerInstance, h } from './index-b00b7e23.js';

const zeaCopyLinkCss = ".zea-copy-link{color:var(--color-foreground-1)}:host,input,button,select,textarea{font-family:'Roboto', sans-serif}.label{font-size:1.1em;margin-bottom:5px;margin-top:2em}.link-container{display:flex;align-items:center;background-color:var(--color-background-1);padding:5px}.link{flex-grow:1;border:none;background-color:transparent;outline:none;color:var(--color-foreground-1)}.copy-icon{cursor:pointer;margin:0 1em}.tooltip{position:absolute;width:64px;font-size:10px;transform:translateX(-22px);padding:2px;margin-top:5px;border-radius:3px;text-align:center;background-color:var(--color-secondary-1);min-width:fit-content;display:none}.active .tooltip,.copy-icon:hover .tooltip{color:var(--color-foreground-1);display:block}";

const ZeaCopyLink = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.tooltipDelay = 3000;
    this.link = '';
    this.tooltipIsVisible = false;
    this.tooltipText = 'Copy Link';
  }
  /**
   */
  onCopyClick() {
    /* Select the text field */
    this.linkInput.select();
    this.linkInput.setSelectionRange(0, 99999); /*For mobile devices*/
    /* Copy the text inside the text field */
    document.execCommand('copy');
    this.tooltipIsVisible = true;
    this.tooltipText = 'Link Copied';
    setTimeout(() => {
      this.tooltipIsVisible = false;
      this.tooltipText = 'Copy Link';
    }, this.tooltipDelay);
  }
  /**
   */
  onLinkClick() {
    /* Select the text field */
    this.linkInput.select();
    this.linkInput.setSelectionRange(0, 99999);
  }
  /**
   */
  render() {
    if (!this.link) {
      this.link = window.location.href;
    }
    return (h("div", { class: "zea-copy-link" }, h("div", { class: "label" }, "Copy Link"), h("div", { class: "link-container" }, h("input", { onClick: this.onLinkClick.bind(this), readOnly: true, class: "link", ref: (el) => (this.linkInput = el), value: this.link }), h("div", { class: { active: this.tooltipIsVisible, 'copy-icon': true }, onClick: this.onCopyClick.bind(this) }, h("zea-icon", { name: "copy-outline" }), h("div", { class: { tooltip: true } }, this.tooltipText)))));
  }
};
ZeaCopyLink.style = zeaCopyLinkCss;

export { ZeaCopyLink as zea_copy_link };
