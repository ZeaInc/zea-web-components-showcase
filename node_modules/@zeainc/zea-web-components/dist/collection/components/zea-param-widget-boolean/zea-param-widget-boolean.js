/* eslint-disable no-unused-vars */
import { Component, h, Prop } from '@stencil/core';
import uxFactory from '../../assets/UxFactory.js';
/**
 * Main class for the component
 */
export class ZeaParamWidgetBoolean {
  /**
   * Class constructor
   */
  constructor() {
    /**
     * Whether the checkbox should be checked
     */
    this.checked = false;
    this.onChange = this.onChange.bind(this);
    if (!globalThis.zeaEngine) {
      console.warn('`zeaEngine` missing from the `globalThis` object and this component requires it');
    }
  }
  /**
   * Run when component loads
   */
  componentDidLoad() {
    if (this.parameter) {
      this.checked = this.parameter.getValue();
      this.parameter.on('valueChanged', () => {
        this.checked = this.parameter.getValue();
      });
    }
  }
  /**
   * Run when input changes
   */
  onChange() {
    if (!globalThis.zeaEngine) {
      console.log('`zeaEngine` missing from `globalThis` object.');
      return;
    }
    this.handleUXChange(this.checkboxInput.checked);
  }
  /**
   * Handles the creation of the UX Change object and the UndoRedoManager
   *
   * @param {Parameter} value - Parameter object
   */
  handleUXChange(value) {
    if (!globalThis.zeaUx) {
      this.parameter.setValue(value);
      console.log('To add Undo/Redo functionalities just add `zeaUx` library to your `globalThis` object, because right now it is missing.');
      return;
    }
    const { UndoRedoManager, ParameterValueChange } = globalThis.zeaUx;
    const undoRedoManager = UndoRedoManager.getInstance();
    const change = new ParameterValueChange(this.parameter, value);
    undoRedoManager.addChange(change);
  }
  /**
   * Render method.
   *
   * @return {JSX} The generated html
   */
  render() {
    return (h("div", { class: "zea-param-widget-boolean" },
      h("input", { onChange: this.onChange, ref: (el) => (this.checkboxInput = el), type: "checkbox", name: this.parameter.getName(), checked: this.checked })));
  }
  static get is() { return "zea-param-widget-boolean"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["zea-param-widget-boolean.css"]
  }; }
  static get styleUrls() { return {
    "$": ["zea-param-widget-boolean.css"]
  }; }
  static get properties() { return {
    "parameter": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Parameter to be edited"
      },
      "attribute": "parameter",
      "reflect": false
    },
    "checked": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Whether the checkbox should be checked"
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    },
    "appData": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The application data"
      },
      "attribute": "app-data",
      "reflect": false
    }
  }; }
}
uxFactory.registerWidget('zea-param-widget-boolean', (p) => p.getDataType() === 'Boolean');
