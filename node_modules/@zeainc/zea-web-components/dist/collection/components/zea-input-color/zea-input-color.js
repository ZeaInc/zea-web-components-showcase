import { Component, h, Prop, Listen } from '@stencil/core';
/**
 * Main class for the component
 */
export class ZeaInputColor {
  constructor() {
    /**
     */
    this.showLabel = false;
    /**
     */
    this.invalidMessage = 'Not valid';
    /**
     */
    this.invalidMessageShown = false;
    /**
     */
    this.required = false;
    /**
     */
    this.isValid = true;
    /**
     */
    this.colorPopupShown = false;
    /**
     */
    this.colorPopupAlign = 'bottom-right';
    /**
     */
    this.label = 'Color';
    /**
     */
    this.name = 'zea-input';
    /**
     */
    this.colorOptions = [
      '#F34235',
      '#E81D62',
      '#000000',
      '#9B26AF',
      '#6639B6',
      '#3E50B4',
      '#2095F2',
      '#02A8F3',
      '#00BBD3',
      '#009587',
      '#4BAE4F',
      '#8AC249',
      '#CCDB38',
      '#FEEA3A',
      '#FEC006',
      '#FE9700',
      '#FE5621',
      '#785447',
      '#9D9D9D',
      '#5F7C8A',
    ];
  }
  /**
   * Listen to click events on the whole document
   * @param {any} e The event
   */
  handleClick(e) {
    if (!e.composedPath().includes(this.colorPopup) &&
      !e.composedPath().includes(this.selectedColorContainer)) {
      this.colorPopupShown = false;
    }
  }
  /**
   */
  onColorClick(e) {
    this.selectColor(e.currentTarget.dataset.color);
  }
  /**
   */
  selectColor(color) {
    const colorElement = this.inputWrapElement.querySelector(`.color-option[data-color="${color}"]`);
    if (!colorElement)
      return;
    this.selectedColor = colorElement.dataset.color;
    if (this.currentColorElement)
      this.currentColorElement.classList.remove('active');
    colorElement.classList.add('active');
    this.currentColorElement = colorElement;
    this.value = this.selectedColor;
  }
  /**
   */
  componentWillLoad() {
    if (!this.selectedColor && !this.value) {
      this.selectedColor = this.colorOptions[Math.floor(Math.random() * this.colorOptions.length)];
      this.value = this.selectedColor;
    }
    else if (this.value) {
      this.selectedColor = this.value;
    }
  }
  /**
   */
  componentDidLoad() {
    if (this.value) {
      const colorElement = this.inputWrapElement.querySelector(`.color-option[data-color="${this.value}"]`);
      if (!colorElement)
        return;
      if (this.currentColorElement)
        this.currentColorElement.classList.remove('active');
      colorElement.classList.add('active');
      this.currentColorElement = colorElement;
    }
  }
  /**
   * Main render function
   * @return {JSX} The generated html
   */
  render() {
    return (h("div", { class: "input-wrap", ref: (el) => (this.inputWrapElement = el) },
      h("div", { class: "color-input" },
        h("div", { class: "color-thumb" },
          h("div", { ref: (el) => (this.selectedColorContainer = el), class: "choosen-color", style: { backgroundColor: this.selectedColor }, onClick: () => {
              this.colorPopupShown = !this.colorPopupShown;
            } }),
          h("div", { ref: (el) => (this.colorPopup = el), class: `color-popup ${this.colorPopupShown ? 'shown' : ''} ${this.colorPopupAlign}` }, this.colorOptions.map((colorOption) => (h("div", { class: "color-option", "data-color": colorOption, onMouseDown: this.onColorClick.bind(this), onMouseUp: () => {
              this.colorPopupShown = false;
            } },
            h("div", { class: "color-sample", style: { backgroundColor: colorOption } })))))),
        this.showLabel && (h("div", { class: "color-copy" },
          h("label", { class: "input-label" }, this.label),
          "Your color helps you stand out from other people."))),
      !this.isValid && this.invalidMessageShown && (h("div", { class: "invalid-message" }, this.invalidMessage))));
  }
  static get is() { return "zea-input-color"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["zea-input-color.css"]
  }; }
  static get styleUrls() { return {
    "$": ["zea-input-color.css"]
  }; }
  static get properties() { return {
    "showLabel": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "show-label",
      "reflect": false,
      "defaultValue": "false"
    },
    "selectedColor": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "selected-color",
      "reflect": false
    },
    "invalidMessage": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "invalid-message",
      "reflect": false,
      "defaultValue": "'Not valid'"
    },
    "invalidMessageShown": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "invalid-message-shown",
      "reflect": false,
      "defaultValue": "false"
    },
    "required": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "required",
      "reflect": false,
      "defaultValue": "false"
    },
    "isValid": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "is-valid",
      "reflect": false,
      "defaultValue": "true"
    },
    "colorPopupShown": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color-popup-shown",
      "reflect": false,
      "defaultValue": "false"
    },
    "colorPopupAlign": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color-popup-align",
      "reflect": false,
      "defaultValue": "'bottom-right'"
    },
    "label": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "label",
      "reflect": false,
      "defaultValue": "'Color'"
    },
    "value": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": false
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "name",
      "reflect": false,
      "defaultValue": "'zea-input'"
    },
    "colorOptions": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "string[]",
        "resolved": "string[]",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "defaultValue": "[\n    '#F34235',\n    '#E81D62',\n    '#000000',\n    '#9B26AF',\n    '#6639B6',\n    '#3E50B4',\n    '#2095F2',\n    '#02A8F3',\n    '#00BBD3',\n    '#009587',\n    '#4BAE4F',\n    '#8AC249',\n    '#CCDB38',\n    '#FEEA3A',\n    '#FEC006',\n    '#FE9700',\n    '#FE5621',\n    '#785447',\n    '#9D9D9D',\n    '#5F7C8A',\n  ]"
    }
  }; }
  static get listeners() { return [{
      "name": "click",
      "method": "handleClick",
      "target": "document",
      "capture": true,
      "passive": false
    }]; }
}
